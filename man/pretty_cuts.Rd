% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_cuts.R
\name{pretty_cuts}
\alias{pretty_cuts}
\title{Pretty Cuts}
\usage{
pretty_cuts(cut_str, only_cuts = FALSE)
}
\arguments{
\item{cut_str}{A character or factor vector produced by \code{\link[base]{cut}}
or by \code{\link[Hmisc]{cut2}} or a similar function. The set values have
to be expressed as integer strings.}

\item{only_cuts}{A logical, defaults to \code{FALSE}. If \code{TRUE} the
function will return only cut boundaries. For \code{FALSE} the function
replaces each value with modified set value.}
}
\value{
A character vector.
}
\description{
Function removing set notation used by \code{\link[base]{cut}}
  or by \code{\link[Hmisc]{cut2}}.
}
\details{
For a factor generated by \code{\link[Hmisc]{cut2}}
  \code{"[2057,2652)", "[2652,3092)", "..."}
  the function will return a character vector
  \code{"2057 - 2651", "2652 - 3091", "..." }
}
\section{Acknowledgements}{

The following function was referenced on Stacks Overflow on a number of
  occasions, in reference to
  \href{https://stackoverflow.com/q/31771810/1655567}{obtaining nicer cuts},
  \href{https://stackoverflow.com/q/34812228/1655567}{improving function performance} and
  \href{https://stackoverflow.com/q/34589927/1655567}{reducing small groups}.
  The linked discussion provide a more comprehensive solutions than the function
  offered in this package.
}

\examples{
set.seed(123)
pretty_cuts(cut(x = runif(n = 1e3, min = 1, 1e4), breaks = 5))

}
